{"remainingRequest":"/home/gabriel/GitHub/nomu/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gabriel/GitHub/nomu/src/components/GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gabriel/GitHub/nomu/src/components/GoogleMap.vue","mtime":1558935786992},{"path":"/home/gabriel/GitHub/nomu/node_modules/babel-loader/lib/index.js","mtime":1550438830853},{"path":"/home/gabriel/GitHub/nomu/node_modules/vuetify-loader/lib/loader.js","mtime":1550438836157},{"path":"/home/gabriel/GitHub/nomu/node_modules/cache-loader/dist/cjs.js","mtime":1550438830933},{"path":"/home/gabriel/GitHub/nomu/node_modules/vue-loader/lib/index.js","mtime":1550438835781}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { db } from '../main'\n\texport default {\n\t    data () {\n\t        return {\n                center: {},\n                markers: [],\n                infoContent: '',\n                infoWindowPos: null,\n                infoWinOpen: true,\n                currentMidx: null,\n                infoOptions: {\n                    pixelOffset: {\n                        width: 0,\n                        height: -35\n                    }\n                },\n                zoom: 13\n\t        }\n        },\n        firestore (){\n            return{\n                markers: db.collection('markers')\n            }\n        },\n        mounted() {\n            this.geolocate();\n            this.attMap();\n        },\n\t    methods: {\n            attMap(){\n                if(localStorage.getItem(\"zoom\") == null){\n                    this.zoom = 9;\n                }\n                else{\n                    this.zoom = Number(localStorage.getItem(\"zoom\"));\n                }\n\n                if(localStorage.getItem(\"lat\") == null){\n                    this.center = { lat: 31.508, lng: -3.587 };\n                }\n                else{\n                    this.center = {\n                        lat : Number(localStorage.getItem(\"lat\")),\n                        lng : Number(localStorage.getItem(\"lng\"))\n                    }\n                }\n            },\n            storeCenter(){\n                this.$refs.mapRef.$mapPromise.then((map) => {\n                    localStorage.setItem(\"lat\", map.getCenter().lat());\n                    localStorage.setItem(\"lng\", map.getCenter().lng());\n                });     \n            },\n            storeZoom(){\n                this.$refs.mapRef.$mapPromise.then((map) => {\n                    localStorage.setItem(\"zoom\", map.getZoom());\n                });                \n            },\n            onMarkerClick (marker) {\n                this.infoWindowPos = marker;\n                this.infoContent = 'Cistern ' + marker.id;\n\n                if (this.currentMidx == marker.id && this.infoWinOpen == true && marker.id != 0) {\n                    this.$router.push({ name: 'graficos',params:{Pid:marker.id} })\n                }\n                else {\n                    this.infoWinOpen = true;\n                    this.currentMidx = marker.id;\n\n                }\n            },\n            geolocate: function() {\n                if(localStorage.getItem(\"lat\") == null){\n                    navigator.geolocation.getCurrentPosition(position => {\n                        this.center = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        };\n\n                        /*var userMarker = {\n                            id: '00',\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        }\n\n                        this.markers.push(userMarker);*/\n                    });\n                }\n            }\n        }\n\t}\n",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<gmap-map\n        ref=\"mapRef\"\n\t\t:center=\"center\"\n\t\t:zoom=\"this.zoom\"\n        @zoom_changed=\"storeZoom\"\n        @center_changed=\"storeCenter\"\n\t>   \n\n        <GmapMarker\n            :key=\"marker\"\n            v-for=\"(m, marker) in markers\"\n            :position=\"m\"\n            :clickable=\"true\"\n            :draggable=\"false\"\n            @click=\"onMarkerClick(m)\"\n        />\n\n        <gmap-info-window :options=\"infoOptions\" :position=\"infoWindowPos\" :opened=\"infoWinOpen\" @closeclick=\"infoWinOpen=false\">\n            <h3>{{infoContent}}</h3>\n            Click again to view\n        </gmap-info-window>\n\n\t</gmap-map>\n</template>\n\n<script>\n    import { db } from '../main'\n\texport default {\n\t    data () {\n\t        return {\n                center: {},\n                markers: [],\n                infoContent: '',\n                infoWindowPos: null,\n                infoWinOpen: true,\n                currentMidx: null,\n                infoOptions: {\n                    pixelOffset: {\n                        width: 0,\n                        height: -35\n                    }\n                },\n                zoom: 13\n\t        }\n        },\n        firestore (){\n            return{\n                markers: db.collection('markers')\n            }\n        },\n        mounted() {\n            this.geolocate();\n            this.attMap();\n        },\n\t    methods: {\n            attMap(){\n                if(localStorage.getItem(\"zoom\") == null){\n                    this.zoom = 9;\n                }\n                else{\n                    this.zoom = Number(localStorage.getItem(\"zoom\"));\n                }\n\n                if(localStorage.getItem(\"lat\") == null){\n                    this.center = { lat: 31.508, lng: -3.587 };\n                }\n                else{\n                    this.center = {\n                        lat : Number(localStorage.getItem(\"lat\")),\n                        lng : Number(localStorage.getItem(\"lng\"))\n                    }\n                }\n            },\n            storeCenter(){\n                this.$refs.mapRef.$mapPromise.then((map) => {\n                    localStorage.setItem(\"lat\", map.getCenter().lat());\n                    localStorage.setItem(\"lng\", map.getCenter().lng());\n                });     \n            },\n            storeZoom(){\n                this.$refs.mapRef.$mapPromise.then((map) => {\n                    localStorage.setItem(\"zoom\", map.getZoom());\n                });                \n            },\n            onMarkerClick (marker) {\n                this.infoWindowPos = marker;\n                this.infoContent = 'Cistern ' + marker.id;\n\n                if (this.currentMidx == marker.id && this.infoWinOpen == true && marker.id != 0) {\n                    this.$router.push({ name: 'graficos',params:{Pid:marker.id} })\n                }\n                else {\n                    this.infoWinOpen = true;\n                    this.currentMidx = marker.id;\n\n                }\n            },\n            geolocate: function() {\n                if(localStorage.getItem(\"lat\") == null){\n                    navigator.geolocation.getCurrentPosition(position => {\n                        this.center = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        };\n\n                        /*var userMarker = {\n                            id: '00',\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        }\n\n                        this.markers.push(userMarker);*/\n                    });\n                }\n            }\n        }\n\t}\n</script>\n\n<style>\n    .vue-map-container{\n        height:calc(100vh - 95px);\n    }\n</style>"]}]}