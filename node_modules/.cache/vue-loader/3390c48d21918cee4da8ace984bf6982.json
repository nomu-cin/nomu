{"remainingRequest":"/home/gabriel/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gabriel/my-app/src/components/ChildMarker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gabriel/my-app/src/components/ChildMarker.vue","mtime":1547389481326},{"path":"/home/gabriel/my-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gabriel/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/home/gabriel/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabriel/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: {\n    google: Object,\n    map: Object,\n    position: Object\n  },\n  computed: {\n    ...mapState({\n      storeId: state => state.stores.selectedStoreId\n    })\n  },\n  watch: {\n    storeId: function(val) {\n      if (val === this.position.storeId) {\n        this.infowindow.open(this.map, this.marker);\n      } else {\n        this.infowindow.close();\n      }\n    }\n  },\n  methods: {\n    selectStore() {\n      this.$store.dispatch({\n        type: \"stores/selectStore\",\n        id: this.position.storeId\n      });\n    }\n  },\n  mounted() {\n    const { Marker } = this.google.maps;\n    const { InfoWindow } = this.google.maps;\n    const self = this;\n    const marker = new Marker({\n      position: this.position,\n      map: this.map,\n      title: this.position.markerName\n    });\n    const infowindow = new InfoWindow({\n      content: this.position.markerName\n    });\n    marker.addListener(\"click\", function() {\n      self.selectStore();\n    });\n    if (+this.storeId === this.position.storeId) {\n      infowindow.open(this.map, marker);\n    }\n    this.infowindow = infowindow;\n    this.marker = marker;\n  }\n};\n",{"version":3,"sources":["ChildMarker.vue"],"names":[],"mappings":";;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChildMarker.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: {\n    google: Object,\n    map: Object,\n    position: Object\n  },\n  computed: {\n    ...mapState({\n      storeId: state => state.stores.selectedStoreId\n    })\n  },\n  watch: {\n    storeId: function(val) {\n      if (val === this.position.storeId) {\n        this.infowindow.open(this.map, this.marker);\n      } else {\n        this.infowindow.close();\n      }\n    }\n  },\n  methods: {\n    selectStore() {\n      this.$store.dispatch({\n        type: \"stores/selectStore\",\n        id: this.position.storeId\n      });\n    }\n  },\n  mounted() {\n    const { Marker } = this.google.maps;\n    const { InfoWindow } = this.google.maps;\n    const self = this;\n    const marker = new Marker({\n      position: this.position,\n      map: this.map,\n      title: this.position.markerName\n    });\n    const infowindow = new InfoWindow({\n      content: this.position.markerName\n    });\n    marker.addListener(\"click\", function() {\n      self.selectStore();\n    });\n    if (+this.storeId === this.position.storeId) {\n      infowindow.open(this.map, marker);\n    }\n    this.infowindow = infowindow;\n    this.marker = marker;\n  }\n};\n</script>"]}]}