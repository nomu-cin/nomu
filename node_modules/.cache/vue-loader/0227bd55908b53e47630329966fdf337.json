{"remainingRequest":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gabriel/GitHub/Nomu_temp/Web/src/components/GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gabriel/GitHub/Nomu_temp/Web/src/components/GoogleMap.vue","mtime":1548300373486},{"path":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/cache-loader/dist/cjs.js","mtime":1548300345126},{"path":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/babel-loader/lib/index.js","mtime":1548300356226},{"path":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/vuetify-loader/lib/loader.js","mtime":1548300259777},{"path":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/cache-loader/dist/cjs.js","mtime":1548300345126},{"path":"/home/gabriel/GitHub/Nomu_temp/Web/node_modules/vue-loader/lib/index.js","mtime":1548300364182}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { db } from '../main'\n\n\texport default {\n\t    data () {\n\t        return {\n                center: { lat: 45.508, lng: -73.587 },\n                markers: [],\n                infoContent: '',\n                infoWindowPos: null,\n                infoWinOpen: false,\n                currentMidx: null,\n                infoOptions: {\n                    pixelOffset: {\n                        width: 0,\n                        height: -35\n                    }\n                },\n\t        }\n        },\n        firestore (){\n            return{\n                markers: db.collection('markers')\n            }\n        },\n        mounted() {\n            this.geolocate();\n        },\n\t    methods: {\n            onMarkerClick (marker) {\n                this.infoWindowPos = marker;\n                this.infoContent = 'Cisterna ' + marker.id;\n                //this.infoContent = marker.infoText;\n\n                if (this.currentMidx == marker.id && this.infoWinOpen == true) {\n                    this.$router.push({ name: 'graficos',params:{Pid:marker.id} })\n                }\n                else {\n                    this.infoWinOpen = true;\n                    this.currentMidx = marker.id;\n\n                }\n            },\n            geolocate: function() {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                });\n            }\n        }\n\t}\n",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<gmap-map\n\t\t:center=\"center\"\n\t\t:zoom=\"9\"\n\t>\n\n        <GmapMarker\n            :key=\"marker\"\n            v-for=\"(m, marker) in markers\"\n            :position=\"m\"\n            :clickable=\"true\"\n            :draggable=\"false\"\n            @click=\"onMarkerClick(m)\"\n        />\n\n        <gmap-info-window :options=\"infoOptions\" :position=\"infoWindowPos\" :opened=\"infoWinOpen\" @closeclick=\"infoWinOpen=false\">\n            {{infoContent}}\n        </gmap-info-window>\n\n\t</gmap-map>\n</template>\n\n<script>\n    import { db } from '../main'\n\n\texport default {\n\t    data () {\n\t        return {\n                center: { lat: 45.508, lng: -73.587 },\n                markers: [],\n                infoContent: '',\n                infoWindowPos: null,\n                infoWinOpen: false,\n                currentMidx: null,\n                infoOptions: {\n                    pixelOffset: {\n                        width: 0,\n                        height: -35\n                    }\n                },\n\t        }\n        },\n        firestore (){\n            return{\n                markers: db.collection('markers')\n            }\n        },\n        mounted() {\n            this.geolocate();\n        },\n\t    methods: {\n            onMarkerClick (marker) {\n                this.infoWindowPos = marker;\n                this.infoContent = 'Cisterna ' + marker.id;\n                //this.infoContent = marker.infoText;\n\n                if (this.currentMidx == marker.id && this.infoWinOpen == true) {\n                    this.$router.push({ name: 'graficos',params:{Pid:marker.id} })\n                }\n                else {\n                    this.infoWinOpen = true;\n                    this.currentMidx = marker.id;\n\n                }\n            },\n            geolocate: function() {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                });\n            }\n        }\n\t}\n</script>\n\n<style>\n    .vue-map-container {\n        width:100%;\n        height: 100%;\n        min-height: 200px;\n        display: block;\n    }\n</style>"]}]}