{"remainingRequest":"/home/gabriel/my-app/node_modules/babel-loader/lib/index.js!/home/gabriel/my-app/node_modules/vuetify-loader/lib/loader.js!/home/gabriel/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/gabriel/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gabriel/my-app/src/components/ChildMarker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gabriel/my-app/src/components/ChildMarker.vue","mtime":1547401009925},{"path":"/home/gabriel/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabriel/my-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gabriel/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/home/gabriel/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabriel/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/gabriel/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  props: {\n    google: Object,\n    map: Object,\n    position: Object\n  },\n  computed: _objectSpread({}, mapState({\n    storeId: function storeId(state) {\n      return state.stores.selectedStoreId;\n    }\n  })),\n  watch: {\n    storeId: function storeId(val) {\n      if (val === this.position.storeId) {\n        this.infowindow.open(this.map, this.marker);\n      } else {\n        this.infowindow.close();\n      }\n    }\n  },\n  methods: {\n    selectStore: function selectStore() {\n      this.$store.dispatch({\n        type: \"stores/selectStore\",\n        id: this.position.storeId\n      });\n    }\n  },\n  mounted: function mounted() {\n    var Marker = this.google.maps.Marker;\n    var InfoWindow = this.google.maps.InfoWindow;\n    var self = this;\n    var marker = new Marker({\n      position: this.position,\n      map: this.map,\n      title: this.position.markerName\n    });\n    var infowindow = new InfoWindow({\n      content: this.position.markerName\n    });\n    marker.addListener(\"click\", function () {\n      self.selectStore();\n    });\n\n    if (+this.storeId === this.position.storeId) {\n      infowindow.open(this.map, marker);\n    }\n\n    this.infowindow = infowindow;\n    this.marker = marker;\n  }\n};",{"version":3,"sources":["ChildMarker.vue"],"names":[],"mappings":";;;;AAIA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,GAAA,EAAA,MAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GADA;AAMA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA,CAAA,eAAA;AAAA;AADA,GAAA,CADA,CANA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,UAAA,GAAA,KAAA,KAAA,QAAA,CAAA,OAAA,EAAA;AACA,aAAA,UAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,KAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,CAAA,KAAA;AACA;AACA;AAPA,GAXA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,oBADA;AAEA,QAAA,EAAA,EAAA,KAAA,QAAA,CAAA;AAFA,OAAA;AAIA;AANA,GApBA;AA4BA,EAAA,OA5BA,qBA4BA;AAAA,QACA,MADA,GACA,KAAA,MAAA,CAAA,IADA,CACA,MADA;AAAA,QAEA,UAFA,GAEA,KAAA,MAAA,CAAA,IAFA,CAEA,UAFA;AAGA,QAAA,IAAA,GAAA,IAAA;AACA,QAAA,MAAA,GAAA,IAAA,MAAA,CAAA;AACA,MAAA,QAAA,EAAA,KAAA,QADA;AAEA,MAAA,GAAA,EAAA,KAAA,GAFA;AAGA,MAAA,KAAA,EAAA,KAAA,QAAA,CAAA;AAHA,KAAA,CAAA;AAKA,QAAA,UAAA,GAAA,IAAA,UAAA,CAAA;AACA,MAAA,OAAA,EAAA,KAAA,QAAA,CAAA;AADA,KAAA,CAAA;AAGA,IAAA,MAAA,CAAA,WAAA,CAAA,OAAA,EAAA,YAAA;AACA,MAAA,IAAA,CAAA,WAAA;AACA,KAFA;;AAGA,QAAA,CAAA,KAAA,OAAA,KAAA,KAAA,QAAA,CAAA,OAAA,EAAA;AACA,MAAA,UAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,MAAA;AACA;;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\nexport default {\n  props: {\n    google: Object,\n    map: Object,\n    position: Object\n  },\n  computed: {\n    ...mapState({\n      storeId: state => state.stores.selectedStoreId\n    })\n  },\n  watch: {\n    storeId: function(val) {\n      if (val === this.position.storeId) {\n        this.infowindow.open(this.map, this.marker);\n      } else {\n        this.infowindow.close();\n      }\n    }\n  },\n  methods: {\n    selectStore() {\n      this.$store.dispatch({\n        type: \"stores/selectStore\",\n        id: this.position.storeId\n      });\n    }\n  },\n  mounted() {\n    const { Marker } = this.google.maps;\n    const { InfoWindow } = this.google.maps;\n    const self = this;\n    const marker = new Marker({\n      position: this.position,\n      map: this.map,\n      title: this.position.markerName\n    });\n    const infowindow = new InfoWindow({\n      content: this.position.markerName\n    });\n    marker.addListener(\"click\", function() {\n      self.selectStore();\n    });\n    if (+this.storeId === this.position.storeId) {\n      infowindow.open(this.map, marker);\n    }\n    this.infowindow = infowindow;\n    this.marker = marker;\n  }\n};\n</script>"],"sourceRoot":"src/components"}]}